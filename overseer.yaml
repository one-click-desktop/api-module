openapi: 3.0.3

info:
  version: 1.0.3
  title: Overseer
  license:
    name: MIT

paths:
  /login:
    post:
      summary: Log into system
      operationId: login
      tags:
        - login
      requestBody:
        $ref: "#/components/requestBodies/LoginRequestBody"
      responses:
        200:
          $ref: "#/components/responses/LoginResponse"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/Error"

  /machines:
    get:
      summary: Get number of available machines grouped into types
      operationId: getMachines
      tags:
        - machines
      responses:
        200:
          $ref: "#/components/responses/MachinesResponse"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/Error"
      security:
        - bearerAuth:
            - user

  /session:
    post:
      summary: Get new session of selected type
      operationId: getSession
      tags:
        - session
      requestBody:
        $ref: "#/components/requestBodies/TypeRequestBody"
      responses:
        200:
          $ref: "#/components/responses/SessionResponse"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/Error"
      security:
        - bearerAuth:
            - user

  /session/{sessionId}:
    get:
      summary: Get session status
      operationId: getSessionStatus
      tags:
        - session
      parameters:
        - $ref: "#/components/parameters/getSessionStatus"
      responses:
        200:
          $ref: "#/components/responses/SessionResponse"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/Error"
      security:
        - bearerAuth:
            - user
    delete:
      summary: Cancel session
      operationId: deleteSession
      tags:
        - session
      parameters:
        - $ref: "#/components/parameters/getSessionStatus"
      responses:
        200:
          $ref: "#/components/responses/OkResponse"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/Error"
      security:
        - bearerAuth:
            - user

  /resources:
    get:
      summary: Get servers resources
      operationId: getResources
      tags:
        - resources
      responses:
        200:
          $ref: "#/components/responses/ResourcesResponse"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        default:
          $ref: "#/components/responses/Error"
      security:
        - bearerAuth:
            - admin

components:
  schemas:
    Login:
      description: Stores information required for login into system
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string
    Session:
      description: Contains information about single session. Address is sent only if session is ready
      required:
        - id
        - type
        - status
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/MachineType"
        status:
          $ref: "#/components/schemas/SessionStatus"
        address:
          $ref: "#/components/schemas/IpAddress"
    IpAddress:
      description: Describes address for connection to machine hosting session
      required:
        - address
        - port
      properties:
        address:
          type: string
          pattern: ipv4
        port:
          type: integer
          format: int32
    Token:
      description: Authorization token
      required:
        - Token
      properties:
        token:
          type: string
    Machines:
      description: Bundles machine type with it's amount
      required:
        - type
        - amount
      properties:
        type:
          $ref: "#/components/schemas/MachineType"
        amount:
          type: integer
          format: int32
    MachineType:
      description: Enum containing types of machines available in the system
      type: string
      enum:
        - cpu
        - gpu
    SessionStatus:
      description: Status of the session
      type: string
      enum:
        - Ready
        - Pending
        - Cancelled
    TotalResources:
      description: Object containing information about resources for admin application
      required:
        - servers
        - total
      properties:
        servers:
          type: array
          items:
            $ref: "#/components/schemas/Server"
        total:
          $ref: "#/components/schemas/Resources"
    Server:
      description: Describes a single server with resources and machines running on it
      required:
        - running
        - free
        - resources
        - name
        - address
      properties:
        name:
          type: string
        address:
          $ref: "#/components/schemas/IpAddress"
        running:
          $ref: "#/components/schemas/Machines"
        free:
          $ref: "#/components/schemas/Machines"
        resources:
          $ref: "#/components/schemas/Resources"
    Resources:
      description: Bundles server hardware resources
      required:
        - memory
        - cpu
        - gpu
        - storage
      properties:
        memory:
          $ref: "#/components/schemas/Resource"
        cpu:
          $ref: "#/components/schemas/Resource"
        gpu:
          $ref: "#/components/schemas/Resource"
        storage:
          $ref: "#/components/schemas/Resource"
    Resource:
      description: Information about proportion of free to total amount of single resource
      required:
        - free
        - total
      properties:
        free:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
    Error:
      description: Generic error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

  responses:
    OkResponse:
      description: Response containing acknowledgment
      content:
        application/json:
          schema:
            type: string
    LoginResponse:
      description: Response containing token for authorization after successful login
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Token"
    SessionResponse:
      description: Response containing session status
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Session"
    MachinesResponse:
      description: Response containing types and amounts of available machines
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Machines"
    ResourcesResponse:
      description: Response containing servers and resources for admin panel
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TotalResources"
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Error:
      description: Generic error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  parameters:
    getSessionStatus:
      name: sessionId
      in: path
      description: The id of session to retrieve
      required: true
      schema:
        type: string

  requestBodies:
    LoginRequestBody:
      description: Used to send login information
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Login"
    TypeRequestBody:
      description: Used to send requested session type
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MachineType"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JTW
